class Comment < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Comment, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def commenter: () -> String?

    def commenter=: (String?) -> String?

    def commenter?: () -> bool

    def commenter_changed?: () -> bool

    def commenter_change: () -> [ String?, String? ]

    def commenter_will_change!: () -> void

    def commenter_was: () -> String?

    def commenter_previously_changed?: () -> bool

    def commenter_previous_change: () -> Array[String?]?

    def commenter_previously_was: () -> String?

    def commenter_before_last_save: () -> String?

    def commenter_change_to_be_saved: () -> Array[String?]?

    def commenter_in_database: () -> String?

    def saved_change_to_commenter: () -> Array[String?]?

    def saved_change_to_commenter?: () -> bool

    def will_save_change_to_commenter?: () -> bool

    def restore_commenter!: () -> void

    def clear_commenter_change: () -> void

    def body: () -> String?

    def body=: (String?) -> String?

    def body?: () -> bool

    def body_changed?: () -> bool

    def body_change: () -> [ String?, String? ]

    def body_will_change!: () -> void

    def body_was: () -> String?

    def body_previously_changed?: () -> bool

    def body_previous_change: () -> Array[String?]?

    def body_previously_was: () -> String?

    def body_before_last_save: () -> String?

    def body_change_to_be_saved: () -> Array[String?]?

    def body_in_database: () -> String?

    def saved_change_to_body: () -> Array[String?]?

    def saved_change_to_body?: () -> bool

    def will_save_change_to_body?: () -> bool

    def restore_body!: () -> void

    def clear_body_change: () -> void

    def article_id: () -> Integer

    def article_id=: (Integer) -> Integer

    def article_id?: () -> bool

    def article_id_changed?: () -> bool

    def article_id_change: () -> [ Integer?, Integer? ]

    def article_id_will_change!: () -> void

    def article_id_was: () -> Integer?

    def article_id_previously_changed?: () -> bool

    def article_id_previous_change: () -> Array[Integer?]?

    def article_id_previously_was: () -> Integer?

    def article_id_before_last_save: () -> Integer?

    def article_id_change_to_be_saved: () -> Array[Integer?]?

    def article_id_in_database: () -> Integer?

    def saved_change_to_article_id: () -> Array[Integer?]?

    def saved_change_to_article_id?: () -> bool

    def will_save_change_to_article_id?: () -> bool

    def restore_article_id!: () -> void

    def clear_article_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def status: () -> String?

    def status=: (String?) -> String?

    def status?: () -> bool

    def status_changed?: () -> bool

    def status_change: () -> [ String?, String? ]

    def status_will_change!: () -> void

    def status_was: () -> String?

    def status_previously_changed?: () -> bool

    def status_previous_change: () -> Array[String?]?

    def status_previously_was: () -> String?

    def status_before_last_save: () -> String?

    def status_change_to_be_saved: () -> Array[String?]?

    def status_in_database: () -> String?

    def saved_change_to_status: () -> Array[String?]?

    def saved_change_to_status?: () -> bool

    def will_save_change_to_status?: () -> bool

    def restore_status!: () -> void

    def clear_status_change: () -> void
  end
  include GeneratedAttributeMethods

  def article: () -> Article
  def article=: (Article?) -> Article?
  def reload_article: () -> Article?
  def build_article: (untyped) -> Article
  def create_article: (untyped) -> Article
  def create_article!: (untyped) -> Article
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Comment, Integer]
    include Enumerable[Comment]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Comment, Integer]
  end
end
